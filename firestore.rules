rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for user authentication and role checking
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isPatient() {
      return isAuthenticated() && exists(/databases/$(database)/documents/patients/$(request.auth.uid));
    }
    
    function isNurse() {
      return isAuthenticated() && exists(/databases/$(database)/documents/nurses/$(request.auth.uid));
    }
    
    function isVerifiedNurse() {
      return isNurse() && 
             get(/databases/$(database)/documents/nurses/$(request.auth.uid)).data.profileStatus == 'verified';
    }
    
    // Patients collection rules
    match /patients/{patientId} {
      // Patients can read and write their own profile
      allow read, write: if isOwner(patientId);
      
      // Verified nurses can read patient basic info for service requests
      allow get: if isVerifiedNurse();
    }
    
    // Nurses collection rules
    match /nurses/{nurseId} {
      // Nurses can read and write their own profile
      allow read, write: if isOwner(nurseId);
      
      // Patients can get any single nurse's profile
      allow get: if isPatient();
      
      // THIS IS THE FIX: Patients can ONLY query for nurses where availability.isOnline is true.
      // This rule now matches the query in the findAvailableNurses function.
      allow list: if isPatient() && request.query.get('where')[0][2] == true && request.query.get('where')[0][0] == 'availability.isOnline';

      
      // During registration, allow creation with pending status
      allow create: if isOwner(nurseId) && 
                      request.resource.data.profileStatus == 'pending_verification' &&
                      request.resource.data.uid == request.auth.uid;
      
      // Only allow updates to own profile, prevent changing verification status
      allow update: if isOwner(nurseId) && 
                       request.resource.data.profileStatus == resource.data.profileStatus &&
                       request.resource.data.uid == resource.data.uid;
    }
    
    // Service requests collection rules
    match /serviceRequests/{requestId} {
      // Patients can create their own service requests
      allow create: if isPatient() && 
                      request.resource.data.patientId == request.auth.uid &&
                      (request.resource.data.status == 'finding-nurses');
      
      // Patients can read and update their own service requests
      allow read, update: if isPatient() && resource.data.patientId == request.auth.uid;
      
      // Nurses can read requests where they are the selected nurse
      allow read: if isVerifiedNurse() && 
                     resource.data.matching.selectedNurseId == request.auth.uid;
      
      // Nurses can update request status when they are the selected nurse
      allow update: if isVerifiedNurse() && 
                      resource.data.matching.selectedNurseId == request.auth.uid &&
                      request.resource.data.patientId == resource.data.patientId &&
                      request.resource.data.matching.selectedNurseId == resource.data.matching.selectedNurseId;
    }
    
    // Legacy appointments collection for backward compatibility
    match /appointments/{appointmentId} {
      // Patients can read/write their own appointments
      allow read, write: if isPatient() && resource.data.patientId == request.auth.uid;
      
      // Nurses can read appointments where they are assigned
      allow read: if isVerifiedNurse() && resource.data.nurseId == request.auth.uid;
      
      // Nurses can update notification status for their appointments
      allow update: if isVerifiedNurse() && 
                      resource.data.nurseId == request.auth.uid;
    }
  }
}
